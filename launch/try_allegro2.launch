<launch>


  <!-- allegro params -->
  <arg name="NUM" default="0"/>
  <arg name="HAND" default="right"/>

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />
  <!-- Allow user to specify database location -->
  <!-- <arg name="db_path" default="$(find ur5_allegro_moveit)/default_warehouse_mongo_db" /> -->

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <arg name="use_gui" default="false" />   <!-- Its for fingers -->
  <arg name="sim" default="false" />

  <group if="$(arg sim)">
    <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
    <include file="$(find ur5_allegro_moveit)/launch/planning_context.launch">
      <arg name="load_robot_description" value="true"/>
    </include>

    <!-- merge the joint states from allegro with moveit fake control -->
    <node name="merged_joint_states_$(arg NUM)"
          type="merged_joint_states"
          pkg="ur5_allegro_moveit"
          output="screen"
          if="$(arg sim)">

      <remap from="ur5_js" to="move_group/fake_controller_joint_states"/>
      <remap from="allegro_js" to="allegroHand_$(arg NUM)/joint_states"/>

      <remap from="joint_states" to="merged_states"/>

      <param name="overwrite" value="false"/>
    </node>

    <!-- We do not have a robot connected, so publish fake joint states -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="use_gui" value="$(arg use_gui)"/>
      <rosparam param="source_list">[merged_states]</rosparam>
      <rosparam param="zeros">
        <!-- shoulder_pan_joint: -0.98
        shoulder_lift_joint: -1.41
        elbow_joint: 2.25
        wrist_1_joint: -2.38
        wrist_2_joint: -1.68
        wrist_3_joint: -0.215 -->

        <!-- Horizontal-->
        <!-- shoulder_pan_joint: 2.604487180709839
        shoulder_lift_joint: -1.9330185095416468
        elbow_joint: -1.9448631445514124
        wrist_1_joint: -0.7871697584735315
        wrist_2_joint: 1.5461069345474243
        wrist_3_joint: 0.2646045684814453 -->

        <!-- Oriented -->
        shoulder_pan_joint: 2.8349502086639404
        shoulder_lift_joint: -1.5307706038104456
        elbow_joint: -2.0756428877459925
        wrist_1_joint: -1.0773962179767054
        wrist_2_joint:  1.5262150764465332
        wrist_3_joint: 0.5258868932723999



       </rosparam>
    </node>


    <include file="$(find arq_ur5)/launch/load_scene.launch">
      <!-- <arg name="scene" value="qmul_realistic_world" /> -->
      <arg name="scene" value="edit_scene2" />

    </include>

    <!-- Given the published joint states, publish tf for the robot links -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

    <!-- Run the main MoveIt! executable without trajectory execution (we do not have controllers configured by default) -->
    <include file="$(find ur5_allegro_moveit)/launch/move_group.launch">
      <arg name="allow_trajectory_execution" value="true"/>
      <arg name="fake_execution" value="true"/>
      <arg name="info" value="true"/>
      <arg name="debug" value="$(arg debug)"/>
    </include>

    <!-- Run Rviz and load the default config to see the state of the move_group node -->
    <include file="$(find ur5_allegro_moveit)/launch/moveit_rviz.launch">
      <arg name="config" value="true"/>
      <arg name="debug" value="$(arg debug)"/>
    </include>

    <!-- If database loading was enabled, start mongodb as well -->
    <include file="$(find ur5_allegro_moveit)/launch/default_warehouse_db.launch" if="$(arg db)">
      <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
    </include>

    <!-- If database loading was enabled, start mongodb as well -->
    <include file="$(find ur5_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)"/>
  </group>

  <include file="$(find allegro_hand_kdl)/launch/combine_torques.launch">
  </include>
  <include file="$(find allegro_hand_kdl)/launch/gravity_compensate.launch" unless="$(arg sim)"/>

  <!-- <include file="$(find allegro_hand_kdl)/launch/cartesian_find_points.launch"> -->
  <!-- </include> -->

  <include file="$(find allegro_hand_kdl)/launch/joint_pose_control.launch" >
    <arg name="MAINTAIN" value="false"/>
    <arg name="POSE" value="next"/>
  </include>

  <include file="$(find allegro_hand_kdl)/launch/control_force.launch" >
    <arg name="TORQUE_TOPIC" value="spring_envelop_torque"/>
  </include>

  <include file="$(find allegro_hand_kdl)/launch/envelop_force.launch" >
    <arg name="INTENSITY" default="0"/>
  </include>


  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="gradual_grip_node" pkg="allegro_hand_kdl" type="gradual_grip_node"  />
  <node name="goal" pkg="ur5_allegro_moveit" type="goal" respawn="true" output="screen" />
  <node pkg="arq_ur5" type="cameraframe2.py" name="fixed2_tf2_broadcaster" output="screen"/>


</launch>
